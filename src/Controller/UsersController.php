<?php
namespace App\Controller;

use App\Controller\AppController;
use Cake\Auth\DefaultPasswordHasher;

/**
 * Users Controller
 *
 * @property \App\Model\Table\UsersTable $Users
 */
class UsersController extends AppController
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    //    $this->Auth->allow(array('index', 'add'));
    }

    /*
     * Users login method
     */
    public function login()
    {
        $this->viewBuilder()->layout('ajax');
        if (!empty($this->request->data)) {
            $user = $this->Auth->identify();
            if ($user) {
                $this->Auth->setUser($user);
                return $this->redirect('/welcome/index');
            }
            $this->Flash->error('Invalid username or password!');
        }
    }

    /*
     *
     */
    public function logout()
    {
        return $this->redirect($this->Auth->logout());
    }

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {
        $users = $this->paginate($this->Users);

        $this->set(compact('users'));
        $this->set('_serialize', ['users']);
    }
//
//    /**
//     * View method
//     *
//     * @param string|null $id User id.
//     * @return \Cake\Network\Response|null
//     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
//     */
//    public function view($id = null)
//    {
//        $user = $this->Users->get($id, [
//            'contain' => []
//        ]);
//
//        $this->set('user', $user);
//        $this->set('_serialize', ['user']);
//    }
//
//    /**
//     * Add method
//     *
//     * @return \Cake\Network\Response|void Redirects on successful add, renders view otherwise.
//     */
//    public function add()
//    {
//        $user = $this->Users->newEntity();
//        if ($this->request->is('post')) {
//            $user = $this->Users->patchEntity($user, $this->request->data);
//            if ($this->Users->save($user)) {
//                $this->Flash->success(__('The user has been saved.'));
//                return $this->redirect(['action' => 'index']);
//            } else {
//                $this->Flash->error(__('The user could not be saved. Please, try again.'));
//            }
//        }
//        $this->set(compact('user'));
//        $this->set('_serialize', ['user']);
//    }
//
//    /**
//     * Edit method
//     *
//     * @param string|null $id User id.
//     * @return \Cake\Network\Response|void Redirects on successful edit, renders view otherwise.
//     * @throws \Cake\Network\Exception\NotFoundException When record not found.
//     */
//    public function edit($id = null)
//    {
//        $user = $this->Users->get($id, [
//            'contain' => []
//        ]);
//        if ($this->request->is(['patch', 'post', 'put'])) {
//            $user = $this->Users->patchEntity($user, $this->request->data);
//            if ($this->Users->save($user)) {
//                $this->Flash->success(__('The user has been saved.'));
//                return $this->redirect(['action' => 'index']);
//            } else {
//                $this->Flash->error(__('The user could not be saved. Please, try again.'));
//            }
//        }
//        $this->set(compact('user'));
//        $this->set('_serialize', ['user']);
//    }
//
//    /**
//     * Delete method
//     *
//     * @param string|null $id User id.
//     * @return \Cake\Network\Response|null Redirects to index.
//     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
//     */
//    public function delete($id = null)
//    {
//        $this->request->allowMethod(['post', 'delete']);
//        $user = $this->Users->get($id);
//        if ($this->Users->delete($user)) {
//            $this->Flash->success(__('The user has been deleted.'));
//        } else {
//            $this->Flash->error(__('The user could not be deleted. Please, try again.'));
//        }
//        return $this->redirect(['action' => 'index']);
//    }
}
