<?php
/**
 * Created by PhpStorm.
 * User: xujing
 * Date: 2016/6/28
 * Time: 9:27
 * Description
 */
namespace App\Model\Table;

use Cake\ORM\Table;

class AreasTable extends Table
{

    /*
     *
     */
    public function initialize(array $config)
    {
        parent::initialize($config); // TODO: Change the autogenerated stub
        $this->table('areas');
    }

    /*
     * 获取树形结构,支持无限极分类
     * @return array
     */
    public function getTree($parentId = 0, $level = 0)
    {
        global $trees;
        $parentNode = $this->find('all')
            ->where(array('parent_id' => $parentId))
            ->map(function($row) {
                $row->child = $this->getChildren($row->id);
                $row->child[] = $row->id;
                return $row;
            })
            ->toArray();
        unset($GLOBALS['children']);
        if (!empty($parentNode)) {
            foreach ($parentNode as $item) {
                if ($level > 0) {
                    $separator = str_repeat("&nbsp;&nbsp;|-", $level);
                } else {
                    $separator = '';
                }
                $trees[$item->id] = array(
                    'name' => $separator . $item->name,
                    'longitude' => $item->longitude,
                    'latitude' => $item->latitude,
                    'zoom' => $item->zoom,
                    'parent_id' => $item->parent_id,
                    'child' => $item->child
                );
                $this->getTree($item->id, $level+1);
            }
        }
        return (array)$trees;
    }

    /*
     * 获取区域下面的子区，支持无限极分类
     * @return array
     */
    public function getChildren($parentId)
    {
        global $children;
        $parentNode = $this->find('all')
            ->select('id')
            ->where(array('parent_id' => $parentId))
            ->toArray();
        if (!empty($parentNode)) {
            foreach ($parentNode as $item) {
                $children[] = $item->id;
                $this->getChildren($item->id);
            }
        }
        return (array)$children;
    }

}

